from flask import Flask, request, jsonify
from flask_cors import CORS
import os
from scanner import VulnerabilityScanner

app = Flask(__name__)
CORS(app)

# Configuration
PAYLOAD_DIR = os.path.join(os.path.dirname(__file__), 'payloads')
SCANNER_TYPES = {
    'LFI': 'run_lfi_scanner',
    'OR': 'run_or_scanner',
    'SQL': 'run_sql_scanner',
    'XSS': 'run_xss_scanner',
    'CRLF': 'run_crlf_scanner'
}

@app.route('/scan', methods=['POST'])
def start_scan():
    try:
        data = request.json
        scan_types = data.get('scanTypes', [])
        target_url = data.get('targetUrl')

        if not scan_types or not target_url:
            return jsonify({
                'status': 'error',
                'message': 'Missing required parameters'
            }), 400

        invalid_scans = [scan for scan in scan_types if scan not in SCANNER_TYPES]
        if invalid_scans:
            return jsonify({
                'status': 'error',
                'message': f'Invalid scan types: {", ".join(invalid_scans)}'
            }), 400

        # Initialize scanner
        scanner = VulnerabilityScanner()
        all_results = {}

        # Run each selected scan type
        for scan_type in scan_types:
            scanner_method = getattr(scanner, SCANNER_TYPES[scan_type])
            results = scanner_method(target_url)
            all_results[scan_type] = results

        return jsonify({
            'status': 'success',
            'results': all_results
        })

    except Exception as e:
        return jsonify({
            'status': 'error',
            'message': str(e)
        }), 500

if __name__ == '__main__':
    app.run(debug=True)